// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CodeGenerator.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class DALTestTemplate : TestTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using DAL;\r\nusing Entities;\r\nusing Moq;\r\nusing NUnit.Framework;\r\nusing System;\r\nu" +
                    "sing System.Collections.Generic;\r\nusing System.Data;\r\nusing System.Linq;\r\n");
            
            #line 14 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
    var ObjectData = templateData.ObjectData;
    var DeleteProcedureTemplate = templateData.ProcedureDataList["PR_DELETE"];
    var GetProcedureTemplate = templateData.ProcedureDataList["PR_GET"];
    var InsertProcedureTemplate = templateData.ProcedureDataList["PR_INSERT"];
    var UpdateProcedureTemplate = templateData.ProcedureDataList["PR_UPDATE"];
 
            
            #line default
            #line hidden
            this.Write("namespace MiCaseCodeGeneratorResultTests\r\n{\r\n    [TestFixture()]\r\n    class ");
            
            #line 23 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DALTests\r\n    {\r\n        private Mock<IDbConnection> Connection;\r\n        private" +
                    " Mock<IDbCommand> Command;\r\n        private Mock<");
            
            #line 27 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write("> Entity;\r\n\r\n        public ");
            
            #line 29 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write(" TestEntity = new ");
            
            #line 29 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n");
            
            #line 31 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
    PushIndent("\t\t\t");
    foreach (var field in ObjectData) {  
        WriteLine("{0} = {1},", field.PropertyName, TestValueForPropertyType[field.Type]);      
    }
    PopIndent(); 
            
            #line default
            #line hidden
            this.Write("        };\r\n\r\n        private IEnumerable<");
            
            #line 38 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write("> TestEntityList = Enumerable.Empty<");
            
            #line 38 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write(@">();
        private Mock<IDbDataParameter> Parameter;
        private Mock<IDataReader> Reader;

        [SetUp]
        public virtual void Setup()
        {
            Connection = new Mock<IDbConnection>();
            Command = new Mock<IDbCommand>();
            Parameter = new Mock<IDbDataParameter>();
            Reader = new Mock<IDataReader>();

            Connection.Setup(connection => connection.CreateCommand()).Returns(Command.Object);

            TestEntityList = SetUpTestEntityList();

            Command.Setup(cmd => cmd.CreateParameter()).Returns(Parameter.Object);
            var dataRecordStub = new Mock<IDataRecord>();
            dataRecordStub.SetupGet(r => r[""ID""]).Returns(TestEntity.Id);
            Entity = new Mock<");
            
            #line 57 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write(">(dataRecordStub.Object);\r\n            \r\n            Command.Setup(r => r.Execute" +
                    "NonQuery());\r\n        }\r\n\r\n        private IEnumerable<");
            
            #line 62 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write(@"> SetUpTestEntityList()
        {
            yield return TestEntity;
        }

        [Test()]
        public void Test_Get_Exists_ReturnsEntity()
        {
            Reader.Setup(reader => reader.Read()).Returns(true);

            // we only need to mock integer and datetime fields :^)
");
            
            #line 73 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
    SetupGet(); 
            
            #line default
            #line hidden
            this.Write(@"            Reader.SetupGet(r => r[""ID""]).Returns(TestEntity.Id);

            Command.Setup(r => r.ExecuteReader()).Returns(Reader.Object);
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);

            var ");
            
            #line 80 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 80 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 82 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.Get(TestEntity.Id);

            Assert.AreEqual(TestEntity.Id, actual.Id);
            Reader.Verify(x => x.Read(), Times.Once);
            Connection.Verify(x => x.CreateCommand(), Times.Once);
        }

        [Test()]
        public void Test_Get_DoesNotExist_ReturnsEmptyEntity()
        {
            Reader.Setup(reader => reader.Read()).Returns(false);

            Command.Setup(r => r.ExecuteReader()).Returns(Reader.Object);
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);

            var ");
            
            #line 98 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 98 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 100 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL.Get(TestEntity.Id);\r\n            var emptyEntity = new ");
            
            #line 101 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.EntityName));
            
            #line default
            #line hidden
            this.Write(@"();
            Reader.Verify(x => x.Read(), Times.Once);
            Assert.AreEqual(actual.Id, emptyEntity.Id);
        }

        [Test()]
        public void Test_GetAll_Exists_ReturnsEntities()
        {
            Reader.Setup(reader => reader.Read()).Returns(true);

            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteReader()).Returns(Reader.Object);
            
");
            
            #line 115 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
    SetupGet(); 
            
            #line default
            #line hidden
            this.Write("            Reader.SetupGet(r => r[\"ID\"]).Returns(TestEntity.Id);\r\n\r\n            " +
                    "var ");
            
            #line 118 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 118 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 120 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.GetAll();

            Assert.AreEqual(TestEntityList.First().Id, actual.First().Id);
            Connection.Verify(x => x.CreateCommand(), Times.Once);
            Reader.Verify(x => x.Read(), Times.AtLeastOnce);
        }

        [Test()]
        public void Test_GetAll_DoesNotExist_ReturnsEmptyEntity()
        {
            Reader.Setup(reader => reader.Read()).Returns(false);

            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteReader()).Returns(Reader.Object);

            // we only need to mock integer and datetime fields :^)
");
            
            #line 137 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
    SetupGet(); 
            
            #line default
            #line hidden
            this.Write("            Reader.SetupGet(r => r[\"ID\"]).Returns(TestEntity.Id);\r\n            //" +
                    " TODO add the rest of the columns\r\n            var ");
            
            #line 140 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 140 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n            \r\n            var actual = ");
            
            #line 142 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL.GetAll();\r\n\r\n            Assert.AreEqual(0, actual.Count());\r\n            Con" +
                    "nection.Verify(x => x.CreateCommand(), Times.Once);\r\n            Reader.Verify(x" +
                    " => x.Read(), Times.AtLeastOnce);\r\n        }\r\n");
            
            #line 148 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
   var outParam = InsertProcedureTemplate.OutParam;   
            
            #line default
            #line hidden
            this.Write(@"        [Test()]
        public void Test_Save_Insert_ReturnsId()
        {
            Reader.Setup(reader => reader.Read()).Returns(true);
            
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteReader()).Returns(Reader.Object);

            Reader.SetupGet(r => r[""");
            
            #line 158 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(outParam.ParameterName));
            
            #line default
            #line hidden
            this.Write("\"]).Returns(TestEntity.");
            
            #line 158 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(outParam.PropertyName));
            
            #line default
            #line hidden
            this.Write(");\r\n            var ");
            
            #line 159 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 159 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 161 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.Save(TestEntity);

            Assert.AreEqual(TestEntity.Id, actual);
            Reader.Verify(x => x.Read(), Times.Once);
        }
        [Test()]
        public void Test_Save_DoesNotInsert_ReturnsZero()
        {
            Reader.Setup(reader => reader.Read()).Returns(false);

            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteReader()).Returns(Reader.Object);

            //Reader.SetupGet(r => r[""PO_DIET_ID""]).Returns(TestEntity.RequestId);
            var ");
            
            #line 176 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 176 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 178 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.Save(TestEntity);

            Assert.AreEqual(0, actual);
            Reader.Verify(x => x.Read(), Times.Once);
        }

        [Test()]
        public void Test_Update_Updated_ReturnsId()
        {
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteNonQuery()).Returns(1);
            
            var ");
            
            #line 191 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 191 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 193 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.Update(TestEntity);

            Assert.AreEqual(TestEntity.Id, actual);
            Connection.Verify(x => x.CreateCommand(), Times.Once);
            Command.Verify(x => x.ExecuteNonQuery(), Times.Once);
        }
        [Test()]
        public void Test_Update_DoesNotUpdate_ReturnsZero()
        {
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);

            var ");
            
            #line 205 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 205 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 207 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.Update(TestEntity);

            Assert.AreEqual(0, actual);
            Connection.Verify(x => x.CreateCommand(), Times.Once);
            Command.Verify(x => x.ExecuteNonQuery(), Times.Once);
        }

        [Test()]
        public void Test_Delete_Exists_ReturnsTrue()
        {
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteNonQuery()).Returns(1);

            var ");
            
            #line 221 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 221 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 223 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write(@"DAL.Delete(TestEntity.Id);
            
            Assert.AreEqual(true, actual);
            Connection.Verify(x => x.CreateCommand(), Times.Once);
            Command.Verify(x => x.ExecuteNonQuery(), Times.Once);
        }

        [Test()]
        public void Test_Delete_DoesNotExist_ReturnsFalse()
        {
            var mockParameters = new Mock<IDataParameterCollection>();
            Command.Setup(cmd => cmd.Parameters).Returns(mockParameters.Object);
            Command.Setup(r => r.ExecuteNonQuery()).Returns(0);

            var ");
            
            #line 237 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL = new ");
            
            #line 237 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL(Connection.Object);\r\n\r\n            var actual = ");
            
            #line 239 "C:\Users\Diego\Source\Repos\micase-codegenerator\CodeGenerator\Templates\DALTestTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ObjectData.ObjectName));
            
            #line default
            #line hidden
            this.Write("DAL.Delete(TestEntity.Id);\r\n\r\n            Assert.AreEqual(false, actual);\r\n      " +
                    "      Connection.Verify(x => x.CreateCommand(), Times.Once);\r\n            Comman" +
                    "d.Verify(x => x.ExecuteNonQuery(), Times.Once);\r\n        }\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
